const MongoClient = require('mongodb').MongoClient;
const { get } = require('http');
const {distance, decodePath, documentSimilarity} = require("./util.js")

const queryVectors = [[2.378, -0.752, 1.69, -1.526, 1.258, -2.67, -1.112, -0.527, -1.552, 0.001, -1.958, 2.277, 0.478, -1.591, -0.954, 0.127, -1.733, -2.479, -1.196, -1.776, -0.399, 0.577, 1.032, 1.64, -4.477, -1.462, 2.014, 0.417, -1.979, 2.654, -0.51, -2.134, -2.805, -0.277, 0.058, -2.449, -0.437, -1.757, 2.957, 2.799, 0.044, 1.734, -0.808, 1.029, 1.542, -0.56, 1.522, -0.769, 0.709, 1.5, 0.066, 1.033, 0.36, 1.645, 0.496, -1.949, 1.597, 1.215, 1.011, 1.364, 1.17, -1.55, -0.405, -2.035, 1.529, -0.667, 1.612, -2.554, -2.324, 0.799, -0.849, -0.39, -0.843, -0.204, 1.771, 2.496, 4.777, -1.937, -3.892, 0.531, -0.667, 0.429, 2.771, 0.354, -1.5, -0.853, -2.247, -1.477, 2.169, 0.651, -0.234, -0.698, 1.71, 0.887, -0.272, -0.653, 1.067, -0.676, -1.063, -0.667, 0.555, -1.822, -0.259, -1.461, 2.32, 2.662, -2.477, 3.074, 2.378, -0.572, 2.31, 2.634, -3.376, -3.093, 1.577, 0.774, 0.684, 0.945, -1.09, -1.419, -0.642, 1.789, 0.128, 1.062, -0.224, -0.588, -1.045, -3.134, -0.34, -1.886, -1.334, -0.636, -0.256, 0.607, 0.177, 0.489, -1.528, 0.243, -1.562, 0.152, -0.451, 0.008, 1.966, -0.057, -0.712, 2.481, 1.757, 0.112, 0.597, -2.359, -1.898, -0.784, -0.351, 3.293, -0.625, -1.526, -2.194, -2.322, -2.107, -1.165, 0.102, 0.955, -0.261, 2.588, 0.378, 2.403, -1.594, 0.695, -3.502, -0.065, -0.94, -0.506, 0.495, -1.115, 1.44, -1.475, -0.772, 1.685, 1.822, -2.108, 1.202, -0.717, -0.72, 1.5, -2.232, 0.872, 0.431, 2.833, 0.498, -0.197, 4.544, 1.595, -0.995, 0.168, -1.473, 1.392, -2.813, -0.886, -1.057, -0.037, 1.157, -1.359, 2.365, -1.677, -2.144, 0.515, -1.904, 0.111, 1.786, -0.712, -3.02, 0.124, 1.361, 0.177, 0.59, 2.505, 1.29, 1.097, -0.652, -1.81, -0.241, -0.216, -0.64, -2.049, -1.206, -0.227, 0.421, 1.102, -0.661, -0.786, 0.266, 2.055, 0.734, -1.005, -0.22, -0.702, 3.376, -2.276, -3.291, 0.236, 2.104, -0.098, -1.563, -0.706, -1.719, -1.376, 1.264, 0.339, 0.873, 1.576, -0.427, 1.141, 0.64, -2.162, 0.358, -1.303, 0.385, -0.036, -1.922, 0.571, 0.85, -0.9, 0.34, -1.291, 0.427, -0.383, 1.493, 3.062, -0.9, -2.901, 3.517, -1.017, 0.589, 1.039, -3.207, -0.663, 0.585, -1.615, 0.042, 1.991, 0.062, 0.157, 1.978, 1.771, -2.309, -3.243, 1.501, 0.61, -1.399, -2.174, -1.073, -0.627, 1.234, 0.826, 2.001, 0.688, 1.733, -1.112, 2.54, 1.55], [2.74, 2.05, 0.341, -2.079, 0.567, -4.121, -0.001, 2.134, -1.709, -0.44, 0.97, 2.14, -0.163, -4.05, -1.013, 1.337, -0.392, -1.965, 0.371, -2.197, 0.203, 0.164, 1.396, 0.424, -4.6, -0.808, 3.118, 0.909, -1.578, -0.084, 1.749, -2.336, -3.069, -0.446, 0.267, -2.027, -0.079, -3.13, 1.733, 0.779, 1.027, 1.163, -1.906, 1.176, 0.199, 0.405, 1.703, -2.487, -0.113, 1.905, 0.733, 1.625, 0.448, -0.211, -0.754, -1.327, 1.396, -0.006, 0.808, 0.663, -0.736, -0.719, -1.416, -3.121, -0.02, -0.558, 1.822, -1.694, -2.34, 0.11, -1.079, 0.923, -1.205, 1.732, 0.996, 2.705, 3.337, -0.92, -2.917, 1.245, 1.822, 0.2, 4.576, -0.404, 0.016, -0.46, -0.108, -0.208, 0.032, 0.881, -2.579, 0.315, 0.633, 0.017, 0.693, -1.207, 2.064, 0.266, -2.484, -2.268, 1.255, -0.265, 0.635, -2.466, 3.125, 1.49, 0.353, 3.694, 2.623, -0.979, 2.562, 1.848, -0.341, -1.029, 2.275, -0.144, -0.357, -0.421, -0.938, -0.745, -0.999, 2.154, -1.081, 0.703, -0.586, -1.562, -0.328, -2.586, 0.229, -0.438, -1.981, -2.223, -0.207, 1.852, -1.209, 0.373, -2.362, 1.087, 1.746, -1.588, 0.845, -1.949, 0.897, 0.432, -0.501, 1.965, 1.435, 0.225, -0.09, -1.492, -0.644, 1.084, -0.725, 2.182, 0.034, -2.129, -2.322, -1.508, -2.824, -1.35, -1.045, 0.603, 0.58, 2.544, 0.203, 1.046, -1.248, 0.747, -1.898, -1.158, -0.585, -0.426, 0.202, -1.753, 1.134, -0.042, -1.396, 3.956, 0.156, 0.79, 0.176, -1.389, -1.247, 3.734, -0.57, -0.284, 1.027, 1.824, -0.627, -0.973, 3.044, 2.374, 1.645, 0.123, -1.466, 3.887, -2.985, -1.783, -2.402, 0.512, 1.319, -1.859, 4.818, -0.769, -1.636, 0.381, -0.327, 0.939, 2.417, -0.361, -2.815, 1.65, -0.921, 2.147, -2.912, 1.627, 1.832, 0.827, 0.785, -0.564, -0.661, -0.91, -0.891, -0.851, -0.044, -1.22, -1.823, -1.275, -0.538, -0.726, -0.942, 1.276, 0.232, -0.186, 0.575, 0.798, 0.654, -3.25, -1.858, -1.232, 0.065, 0.066, -0.786, -2.293, -1.772, -0.888, 0.6, 0.746, 1.469, 0.973, -1.63, 1.662, 0.848, -1.832, -0.034, -0.271, 1.722, -1.957, 0.355, -2.103, 1.125, -1.52, -1.365, -1.842, -0.647, -1.708, -0.065, 0.362, -0.339, -4.011, 3.72, -0.28, 0.455, 0.915, -2.999, -1.156, 0.071, -2.411, -1.829, 1.12, 0.184, 1.762, 2.465, 0.096, -1.755, -3.173, 1.003, 2.07, -0.828, -1.877, -1.844, 1.214, 0.416, -0.423, -0.245, 0.551, 1.3, 0.191, 1.951, 2.464], [-0.744, -2.114, -0.594, -4.43, 2.124, 0.022, -2.427, -1.965, 1.22, 0.098, -3.614, 2.791, 0.389, -0.285, -0.216, 1.457, -2.158, 0.463, 1.403, -1.045, 1.897, 0.678, 0.404, 0.756, -1.366, -0.939, 4.154, 1.498, -2.664, 1.7, -0.982, -0.983, -1.629, -0.526, 0.324, 2.222, 0.028, -1.656, 0.348, 2.414, 0.041, 0.261, -2.23, 0.297, 1.238, -0.728, 2.644, 0.681, -1.468, 0.58, -0.591, 1.44, 1.711, 1.001, 4.21, 0.51, -1.151, 2.861, -1.644, -0.525, -1.265, 1.073, -5.451, -4.01, -2.06, -0.59, -1.839, 4.527, -1.037, 0.226, 1.406, 1.476, 0.994, 2.42, 1.819, -2.796, 3.391, -2.828, -5.858, 2.164, -3.415, 1.897, 2.457, -0.315, -2.719, -0.187, -2.22, -0.668, 0.208, 0.749, -0.605, -0.591, 0.912, 3.02, 2.386, -1.608, 2.522, -1.189, -2.203, -0.455, 1.62, -4.209, 1.401, -2.851, 3.2, -2.219, -1.451, 3.106, 4.056, -0.658, 2.143, 3.598, -0.607, -4.735, 1.964, -1.483, 0.731, 0.035, 0.697, 1.179, 1.636, 2.736, 1.218, 0.193, 1.048, 1.846, -0.038, -2.233, -1.041, 1.943, -4.717, -0.014, 0.574, 1.325, -2.72, -1.013, 0.138, -0.827, -1.661, 0.684, -4.102, 2.755, 2.755, -0.416, -0.808, -0.025, 0.193, -1.697, -5.583, -2.646, 0.182, -1.757, -0.528, 1.041, 2.512, -2.355, 0.645, -1.543, -0.861, -0.265, 0.976, 2.178, -0.75, -0.976, -1.876, 3.642, -1.802, -0.547, -4.187, 2.31, 1.405, -0.315, 0.611, 1.739, 0.926, -3.662, 0.718, 1.949, 3.437, -2.866, 5.11, -1.421, 0.174, 1.72, -1.296, 1.644, 2.813, 0.224, 0.073, -1.649, -1.37, 0.023, 1.831, 2.06, -0.213, -1.74, -3.614, -1.678, -0.814, -1.018, 1.214, -2.127, 1.224, -1.897, -3.468, -1.855, -3.526, -0.215, -0.446, -0.189, 1.406, -1.952, 3.372, -0.469, -2.066, 1.914, 0.04, 0.412, -2.944, -2.46, 3.229, 2.226, 0.98, -3.917, 4.07, 2.654, 0.02, -3.508, 0.391, 3.054, 0.936, 3.246, 3.076, 0.114, 1.511, -0.543, 0.031, -0.955, -6.025, -0.128, 3.723, 0.407, 0.894, -0.895, 3.273, -0.493, 1.217, 1.212, -1.305, 1.514, -1.607, -0.777, 0.246, -3.306, 0.022, -0.25, 0.921, 1.005, 0.759, 1.085, 1.2, 1.152, 1.203, -3.117, -1.841, 0.696, -1.499, 1.672, 0.424, -5.422, 4.561, -0.577, -2.882, -0.578, -1.298, 2.382, -1.856, -1.407, 0.184, 1.096, 4.168, -2.806, 2.788, 0.067, -0.388, -1.217, 2.635, -0.305, 1.58, -0.451, -1.882, -2.424, 1.731, -1.161, 1.932, 2.248, -0.437, 0.139, 0.032, 2.088]]

// get 'reviews_spacy' from localhost mongodb db: gp, collection: map
const getReviews = async (place_id) => {
    const client = await MongoClient.connect("mongodb://localhost:27017")
    const db = client.db("gp")
    const collection = db.collection("map")
    const result = await collection.findOne({place_id: place_id})
    client.close()
    return result['reviews_spacy']
}

const main = async () =>{
    let place_id = 'ChIJe_wsDfqpQjQRQTD25ugIkK4'
    const reviews = await getReviews(place_id)
    // for(let i = 0; i < 10000; ++i){
        var result = documentSimilarity(queryVectors, reviews, place_id)
    // }
    console.log(result)
}

main()
